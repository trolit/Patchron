{
    "pull": [
        {
            "enabled": true,
            "rulename": "v1/pull/StrictWorkflow",
            "config": {
                "workflow": [
                    {
                        "base": "main",
                        "head": "release"
                    },
                    {
                        "base": "develop",
                        "head": "feature"
                    },
                    {
                        "base": "main",
                        "head": "hotfix"
                    }
                ],
                "abortReviewOnInvalidFlow": true,
                "abortReviewOnInvalidBranchPrefix": false
            }
        }
    ],

    "files": {
        "backend/*": {
            "js": [
                {
                    "enabled": true,
                    "rulename": "v1/common/ComparisionOperatorLevel",
                    "config": {
                        "allowedLevels": [1, 2]
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/FixedLoopLengthCondition",
                    "config": {
                        "regex": "(\\w+).length"
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/KeywordsOrderedByLength",
                    "config": {
                        "keywords": [
                            {
                                "name": "require (packages)",
                                "regex": "const.*(?:require(?!.*[@,.]/)|{)",
                                "order": "ascending",
                                "ignoreNewline": false,
                                "multiLineOptions": [
                                    {
                                        "indicator": {
                                            "notIncludes": "require"
                                        },
                                        "limiter": {
                                            "regex": "require(?!.*[@,.]/)"
                                        }
                                    }
                                ]
                            },
                            {
                                "name": "require (files)",
                                "regex": "const.*(?:require(.*[@,.]/)|{)",
                                "order": "ascending",
                                "ignoreNewline": false,
                                "multiLineOptions": [
                                    {
                                        "indicator": {
                                            "notIncludes": "require"
                                        },
                                        "limiter": {
                                            "regex": "require(.*[@,.]/)"
                                        }
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/LineBreakBeforeReturn",
                    "config": {}
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/MarkedComments",
                    "config": {
                        "prefixes": [
                            {
                                "value": "@TODO",
                                "meaning": "not implemented feature"
                            },
                            {
                                "value": "@TMP",
                                "meaning": "temporary solution"
                            },
                            {
                                "value": "@NOTE",
                                "meaning": "information about code"
                            }
                        ],
                        "isAppliedToSingleLineComments": true,
                        "isAppliedToMultiLineComments": true,
                        "isAppliedToInlineComments": true
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/PositionedKeywords",
                    "config": {
                        "keywords": [
                            {
                                "name": "require",
                                "regex": "const.*(?:require|{)",
                                "position": {
                                    "BOF": true,
                                    "custom": null
                                },
                                "maxLineBreaks": 0,
                                "enforced": true,
                                "breakOnFirstOccurence": false,
                                "countDifferentCodeAsLineBreak": false,
                                "multiLineOptions": [
                                    {
                                        "indicator": {
                                            "notIncludes": "require"
                                        },
                                        "limiter": {
                                            "startsWith": "} = require"
                                        }
                                    }
                                ],
                                "order": [
                                    {
                                        "name": "packages",
                                        "regex": "require(?!.*[@,.]/)"
                                    },
                                    {
                                        "name": "others",
                                        "regex": "require(.*[@,.]/)"
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/PredefinedFilenames",
                    "config": {
                        "restrictions": [
                            {
                                "path": "backend/src/validators/*",
                                "expectedName": ".*Validator.js"
                            },
                            {
                                "path": "backend/src/services/*",
                                "expectedName": "[A-Z].*.js"
                            },
                            {
                                "path": "backend/src/routes/*",
                                "expectedName": "[a-z].*.js"
                            },
                            {
                                "path": "backend/src/repositories/*",
                                "expectedName": "[A-Z].*Repository.js"
                            },
                            {
                                "path": "backend/src/plugins/*",
                                "expectedName": "[a-z].*.js"
                            },
                            {
                                "path": "backend/src/models/*",
                                "expectedName": "(?:[A-Z].*.js|index.js)"
                            },
                            {
                                "path": "backend/src/middlewares/*",
                                "expectedName": "[a-z].*.js"
                            },
                            {
                                "path": "backend/src/helpers/*",
                                "expectedName": "[a-z].*.js"
                            },
                            {
                                "path": "backend/src/di/*",
                                "expectedName": "[a-z].*.js"
                            },
                            {
                                "path": "backend/src/controllers/*",
                                "expectedName": ".*Controller.js"
                            },
                            {
                                "path": "backend/src/config/*",
                                "expectedName": "[a-z].*.js"
                            }
                        ]
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/SingleLineBlockPattern",
                    "config": {
                        "blocks": [
                            {
                                "name": "for",
                                "regex": "for.*\\(.*\\)",
                                "countAsSingleLineBlockWhenNoBraces": true
                            },
                            {
                                "name": "for",
                                "regex": "^for(\\s)+\\($",
                                "multiLineOptions": [
                                    {
                                        "limiter": {
                                            "startsWith": ")",
                                            "indentation": "le-indicator"
                                        }
                                    }
                                ]
                            },
                            {
                                "name": "do..while",
                                "regex": "^[\\s]*(?:do).*",
                                "multiLineOptions": [
                                    {
                                        "limiter": {
                                            "includes": "while",
                                            "indentation": "le-indicator",
                                            "testInIndicator": true
                                        }
                                    }
                                ]
                            },
                            {
                                "name": "if",
                                "regex": "if.*\\(.*\\)",
                                "countAsSingleLineBlockWhenNoBraces": true
                            },
                            {
                                "name": "if",
                                "regex": "^if(\\s)+\\($",
                                "multiLineOptions": [
                                    {
                                        "limiter": {
                                            "startsWith": ")",
                                            "indentation": "le-indicator"
                                        }
                                    }
                                ]
                            },
                            {
                                "name": "else if",
                                "regex": "(?:else if).*\\(.*\\)",
                                "countAsSingleLineBlockWhenNoBraces": true
                            },
                            {
                                "name": "else if",
                                "regex": "^(?:else if)(\\s)+\\($",
                                "multiLineOptions": [
                                    {
                                        "limiter": {
                                            "startsWith": ")",
                                            "indentation": "le-indicator"
                                        }
                                    }
                                ]
                            },
                            {
                                "name": "else",
                                "regex": "^else.*",
                                "countAsSingleLineBlockWhenNoBraces": true
                            },
                            {
                                "name": "while",
                                "regex": "while.*\\(.*\\)",
                                "countAsSingleLineBlockWhenNoBraces": true
                            },
                            {
                                "name": "while",
                                "regex": "^while(\\s)+\\($",
                                "multiLineOptions": [
                                    {
                                        "limiter": {
                                            "startsWith": ")",
                                            "indentation": "le-indicator"
                                        }
                                    }
                                ]
                            }
                        ],
                        "curlyBraces": true
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/js/AsynchronousPattern",
                    "config": {
                        "pattern": "await"
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/js/ImplicitIndexFileImport",
                    "config": {
                        "type": "commonjs"
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/js/ImportWithoutExtension",
                    "config": {
                        "type": "commonjs"
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/js/IndividualMethodImport",
                    "config": {
                        "packages": [
                            {
                                "name": "lodash",
                                "regex": "[(|'|\"|`]lodash[)|'|\"|`]"
                            }
                        ]
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/js/SimpleComparision",
                    "config": {
                        "patterns": [
                            {
                                "name": "eq/ne (true, false)",
                                "regex": "(!={1,2}|={2,3})(\\s)*?(true|false)",
                                "comment": "`value === true`, `value !== false` -> `value`\n`value === false`, `value !== true` -> `!value`",
                                "multiLineOptions": [
                                    {
                                        "indicator": {
                                            "endsWith": "="
                                        },
                                        "limiter": "nextLine"
                                    }
                                ]
                            },
                            {
                                "name": "eq/ne (null, undefined)",
                                "regex": "(!={1,2}|={2,3})(\\s)*?(null|undefined)",
                                "comment": "`value === null/undefined` -> `!value`\n`value !== null/undefined` -> `!!value`, `value`",
                                "multiLineOptions": [
                                    {
                                        "indicator": {
                                            "endsWith": "="
                                        },
                                        "limiter": "nextLine"
                                    }
                                ]
                            },
                            {
                                "name": "ne (-1)",
                                "regex": "!={1,2}(\\s)*?-1",
                                "comment": "`value !== -1` -> `~value`"
                            }
                        ]
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/js/SimplePropertyAssignment",
                    "config": {}
                }
            ]
        },

        "frontend/*": {
            "js": [
                {
                    "enabled": true,
                    "rulename": "v1/common/ComparisionOperatorLevel",
                    "config": {
                        "allowedLevels": [1, 2]
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/FixedLoopLengthCondition",
                    "config": {
                        "regex": "(\\w+).length"
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/KeywordsOrderedByLength",
                    "config": {
                        "keywords": [
                            {
                                "name": "import (packages)",
                                "regex": "import.*(?:from(?!.*[@,.]/)|{)",
                                "order": "ascending",
                                "ignoreNewline": false,
                                "multiLineOptions": [
                                    {
                                        "indicator": {
                                            "notIncludes": "from"
                                        },
                                        "limiter": {
                                            "regex": "from(?!.*[@,.]/)"
                                        }
                                    }
                                ]
                            },
                            {
                                "name": "import (files)",
                                "regex": "import.*(?:from.*[@,.]/|{)",
                                "order": "ascending",
                                "ignoreNewline": false,
                                "multiLineOptions": [
                                    {
                                        "indicator": {
                                            "notIncludes": "from"
                                        },
                                        "limiter": {
                                            "regex": "from.*[@,.]/"
                                        }
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/LineBreakBeforeReturn",
                    "config": {}
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/MarkedComments",
                    "config": {
                        "prefixes": [
                            {
                                "value": "@TODO",
                                "meaning": "not implemented feature"
                            },
                            {
                                "value": "@TMP",
                                "meaning": "temporary solution"
                            },
                            {
                                "value": "@NOTE",
                                "meaning": "information about code"
                            }
                        ],
                        "isAppliedToSingleLineComments": true,
                        "isAppliedToMultiLineComments": true,
                        "isAppliedToInlineComments": true
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/PositionedKeywords",
                    "config": {
                        "keywords": [
                            {
                                "name": "import",
                                "regex": "import.*(?:from|{)",
                                "position": {
                                    "BOF": true,
                                    "custom": null
                                },
                                "maxLineBreaks": 0,
                                "enforced": true,
                                "breakOnFirstOccurence": false,
                                "countDifferentCodeAsLineBreak": false,
                                "multiLineOptions": [
                                    {
                                        "indicator": {
                                            "notIncludes": "from"
                                        },
                                        "limiter": {
                                            "startsWith": "} from"
                                        }
                                    }
                                ],
                                "order": [
                                    {
                                        "name": "packages",
                                        "regex": "from(?!.*[@,.]/)"
                                    },
                                    {
                                        "name": "others",
                                        "regex": "from.*[@,.]/"
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/SingleLineBlockPattern",
                    "config": {
                        "blocks": [
                            {
                                "name": "for",
                                "regex": "for.*\\(.*\\)",
                                "countAsSingleLineBlockWhenNoBraces": true
                            },
                            {
                                "name": "for",
                                "regex": "^for(\\s)+\\($",
                                "multiLineOptions": [
                                    {
                                        "limiter": {
                                            "startsWith": ")",
                                            "indentation": "le-indicator"
                                        }
                                    }
                                ]
                            },
                            {
                                "name": "do..while",
                                "regex": "^[\\s]*(?:do).*",
                                "multiLineOptions": [
                                    {
                                        "limiter": {
                                            "includes": "while",
                                            "indentation": "le-indicator",
                                            "testInIndicator": true
                                        }
                                    }
                                ]
                            },
                            {
                                "name": "if",
                                "regex": "if.*\\(.*\\)",
                                "countAsSingleLineBlockWhenNoBraces": true
                            },
                            {
                                "name": "if",
                                "regex": "^if(\\s)+\\($",
                                "multiLineOptions": [
                                    {
                                        "limiter": {
                                            "startsWith": ")",
                                            "indentation": "le-indicator"
                                        }
                                    }
                                ]
                            },
                            {
                                "name": "else if",
                                "regex": "(?:else if).*\\(.*\\)",
                                "countAsSingleLineBlockWhenNoBraces": true
                            },
                            {
                                "name": "else if",
                                "regex": "^(?:else if)(\\s)+\\($",
                                "multiLineOptions": [
                                    {
                                        "limiter": {
                                            "startsWith": ")",
                                            "indentation": "le-indicator"
                                        }
                                    }
                                ]
                            },
                            {
                                "name": "else",
                                "regex": "^else.*",
                                "countAsSingleLineBlockWhenNoBraces": true
                            },
                            {
                                "name": "while",
                                "regex": "while.*\\(.*\\)",
                                "countAsSingleLineBlockWhenNoBraces": true
                            },
                            {
                                "name": "while",
                                "regex": "^while(\\s)+\\($",
                                "multiLineOptions": [
                                    {
                                        "limiter": {
                                            "startsWith": ")",
                                            "indentation": "le-indicator"
                                        }
                                    }
                                ]
                            }
                        ],
                        "curlyBraces": true
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/js/AsynchronousPattern",
                    "config": {
                        "pattern": "await"
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/js/ImplicitIndexFileImport",
                    "config": {
                        "type": "module"
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/js/ImportWithoutExtension",
                    "config": {
                        "type": "module"
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/js/IndividualMethodImport",
                    "config": {
                        "packages": [
                            {
                                "name": "lodash",
                                "regex": "[(|'|\"|`]lodash[)|'|\"|`]"
                            }
                        ]
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/js/SimpleComparision",
                    "config": {
                        "patterns": [
                            {
                                "name": "eq/ne (true, false)",
                                "regex": "(!={1,2}|={2,3})(\\s)*?(true|false)",
                                "comment": "`value === true`, `value !== false` -> `value`\n`value === false`, `value !== true` -> `!value`",
                                "multiLineOptions": [
                                    {
                                        "indicator": {
                                            "endsWith": "="
                                        },
                                        "limiter": "nextLine"
                                    }
                                ]
                            },
                            {
                                "name": "eq/ne (null, undefined)",
                                "regex": "(!={1,2}|={2,3})(\\s)*?(null|undefined)",
                                "comment": "`value === null/undefined` -> `!value`\n`value !== null/undefined` -> `!!value`, `value`",
                                "multiLineOptions": [
                                    {
                                        "indicator": {
                                            "endsWith": "="
                                        },
                                        "limiter": "nextLine"
                                    }
                                ]
                            },
                            {
                                "name": "ne (-1)",
                                "regex": "!={1,2}(\\s)*?-1",
                                "comment": "`value !== -1` -> `~value`"
                            }
                        ]
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/js/SimplePropertyAssignment",
                    "config": {}
                }
            ],

            "vue": [
                {
                    "enabled": true,
                    "rulename": "v1/common/ComparisionOperatorLevel",
                    "config": {
                        "allowedLevels": [1, 2]
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/FixedLoopLengthCondition",
                    "config": {
                        "regex": "(\\w+).length"
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/KeywordsOrderedByLength",
                    "config": {
                        "keywords": [
                            {
                                "name": "import (packages)",
                                "regex": "import.*(?:from(?!.*[@,.]/)|{)",
                                "order": "ascending",
                                "ignoreNewline": false,
                                "multiLineOptions": [
                                    {
                                        "indicator": {
                                            "notIncludes": "from"
                                        },
                                        "limiter": {
                                            "regex": "from(?!.*[@,.]/)"
                                        }
                                    }
                                ]
                            },
                            {
                                "name": "import (files)",
                                "regex": "import.*(?:from.*[@,.]/|{)",
                                "order": "ascending",
                                "ignoreNewline": false,
                                "multiLineOptions": [
                                    {
                                        "indicator": {
                                            "notIncludes": "from"
                                        },
                                        "limiter": {
                                            "regex": "from.*[@,.]/"
                                        }
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/LineBreakBeforeReturn",
                    "config": {}
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/MarkedComments",
                    "config": {
                        "prefixes": [
                            {
                                "value": "@TODO",
                                "meaning": "not implemented feature"
                            },
                            {
                                "value": "@TMP",
                                "meaning": "temporary solution"
                            },
                            {
                                "value": "@NOTE",
                                "meaning": "information about code"
                            }
                        ],
                        "isAppliedToSingleLineComments": true,
                        "isAppliedToMultiLineComments": true,
                        "isAppliedToInlineComments": true
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/PositionedKeywords",
                    "config": {
                        "keywords": [
                            {
                                "name": "import",
                                "regex": "import.*(?:from|{)",
                                "position": {
                                    "BOF": false,
                                    "custom": {
                                        "name": "<script>",
                                        "regex": "<script>"
                                    }
                                },
                                "maxLineBreaks": 0,
                                "enforced": true,
                                "breakOnFirstOccurence": false,
                                "countDifferentCodeAsLineBreak": false,
                                "multiLineOptions": [
                                    {
                                        "indicator": {
                                            "notIncludes": "from"
                                        },
                                        "limiter": {
                                            "startsWith": "} from"
                                        }
                                    }
                                ],
                                "order": [
                                    {
                                        "name": "packages",
                                        "regex": "from(?!.*[@,.]/)"
                                    },
                                    {
                                        "name": "others",
                                        "regex": "from.*[@,.]/"
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/PredefinedFilenames",
                    "config": {
                        "restrictions": [
                            {
                                "path": "client/src/components/*",
                                "expectedName": "[A-Z].*"
                            }
                        ]
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/common/SingleLineBlockPattern",
                    "config": {
                        "blocks": [
                            {
                                "name": "for",
                                "regex": "for.*\\(.*\\)",
                                "countAsSingleLineBlockWhenNoBraces": true
                            },
                            {
                                "name": "for",
                                "regex": "^for(\\s)+\\($",
                                "multiLineOptions": [
                                    {
                                        "limiter": {
                                            "startsWith": ")",
                                            "indentation": "le-indicator"
                                        }
                                    }
                                ]
                            },
                            {
                                "name": "do..while",
                                "regex": "^[\\s]*(?:do).*",
                                "multiLineOptions": [
                                    {
                                        "limiter": {
                                            "includes": "while",
                                            "indentation": "le-indicator",
                                            "testInIndicator": true
                                        }
                                    }
                                ]
                            },
                            {
                                "name": "if",
                                "regex": "if.*\\(.*\\)",
                                "countAsSingleLineBlockWhenNoBraces": true
                            },
                            {
                                "name": "if",
                                "regex": "^if(\\s)+\\($",
                                "multiLineOptions": [
                                    {
                                        "limiter": {
                                            "startsWith": ")",
                                            "indentation": "le-indicator"
                                        }
                                    }
                                ]
                            },
                            {
                                "name": "else if",
                                "regex": "(?:else if).*\\(.*\\)",
                                "countAsSingleLineBlockWhenNoBraces": true
                            },
                            {
                                "name": "else if",
                                "regex": "^(?:else if)(\\s)+\\($",
                                "multiLineOptions": [
                                    {
                                        "limiter": {
                                            "startsWith": ")",
                                            "indentation": "le-indicator"
                                        }
                                    }
                                ]
                            },
                            {
                                "name": "else",
                                "regex": "^else.*",
                                "countAsSingleLineBlockWhenNoBraces": true
                            },
                            {
                                "name": "while",
                                "regex": "while.*\\(.*\\)",
                                "countAsSingleLineBlockWhenNoBraces": true
                            },
                            {
                                "name": "while",
                                "regex": "^while(\\s)+\\($",
                                "multiLineOptions": [
                                    {
                                        "limiter": {
                                            "startsWith": ")",
                                            "indentation": "le-indicator"
                                        }
                                    }
                                ]
                            }
                        ],
                        "curlyBraces": true
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/html/MarkedComments",
                    "config": {
                        "prefixes": [
                            {
                                "value": "@TODO",
                                "meaning": "not implemented feature"
                            },
                            {
                                "value": "@TMP",
                                "meaning": "temporary solution"
                            },
                            {
                                "value": "@NOTE",
                                "meaning": "information about code"
                            }
                        ]
                    }
                },

                {
                    "enabled": true,
                    "rulename": "v1/js/AsynchronousPattern",
                    "config": {
                        "pattern": "await"
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/js/ImplicitIndexFileImport",
                    "config": {
                        "type": "module"
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/js/ImportWithoutExtension",
                    "config": {
                        "type": "module"
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/js/IndividualMethodImport",
                    "config": {
                        "packages": [
                            {
                                "name": "lodash",
                                "regex": "[(|'|\"|`]lodash[)|'|\"|`]"
                            }
                        ]
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/js/SimpleComparision",
                    "config": {
                        "patterns": [
                            {
                                "name": "eq/ne (true, false)",
                                "regex": "(!={1,2}|={2,3})(\\s)*?(true|false)",
                                "comment": "`value === true`, `value !== false` -> `value`\n`value === false`, `value !== true` -> `!value`",
                                "multiLineOptions": [
                                    {
                                        "indicator": {
                                            "endsWith": "="
                                        },
                                        "limiter": "nextLine"
                                    }
                                ]
                            },
                            {
                                "name": "eq/ne (null, undefined)",
                                "regex": "(!={1,2}|={2,3})(\\s)*?(null|undefined)",
                                "comment": "`value === null/undefined` -> `!value`\n`value !== null/undefined` -> `!!value`, `value`",
                                "multiLineOptions": [
                                    {
                                        "indicator": {
                                            "endsWith": "="
                                        },
                                        "limiter": "nextLine"
                                    }
                                ]
                            },
                            {
                                "name": "ne (-1)",
                                "regex": "!={1,2}(\\s)*?-1",
                                "comment": "`value !== -1` -> `~value`"
                            }
                        ]
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/js/SimplePropertyAssignment",
                    "config": {}
                },

                {
                    "enabled": true,
                    "rulename": "v1/vue/NormalizedEventHandler",
                    "config": {
                        "prefix": "on",
                        "noUnnecessaryBraces": true
                    }
                },
                {
                    "enabled": true,
                    "rulename": "v1/vue/SelfClosingTag",
                    "config": {}
                }
            ]
        }
    }
}
